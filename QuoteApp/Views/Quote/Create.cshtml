@using QuoteApp.Models
@model QuoteApp.Database.Quote.QuoteViewModel

@{
    ViewBag.Title = "New quote";
}
<h3>Create new quote</h3>
<div class="alert alert-danger col-lg-12" id="quoteNumberAlert" role="alert" hidden>
    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
    <span class="sr-only">Error:</span>
    The specified quote number already exists. The next available number is <strong id="nextAvailableNumber"></strong>
</div>
<div class="form-horizontal col-lg-10" role="form" id="customerInfo">
    <div class="form-group">
        <label for="customerClub" class="col-sm-2 control-label">Customer club</label>
        <div class="col-sm-6">
            <input class="form-control" id="customerClub" placeholder="The name of the club to quote for" onchange=" updateReference(); ">
            <input type="hidden" id="clubId" value="0" />
        </div>
    </div>
    <div class="form-group">
        <label for="clubAddress" class="col-sm-2 control-label">Club address</label>
        <div class="col-sm-6">
            <input class="form-control" id="clubAddress" placeholder="Address">
        </div>
    </div>
    <div class="form-group">
        <label for="contactName" class="col-sm-2 control-label">Contact name</label>
        <div class="col-sm-6">
            <input class="form-control" id="contactName" placeholder="John Smith" onchange=" updateReference(); ">
            <input type="hidden" id="contactId" value="0" />
        </div>
    </div>
    <div class="form-group">
        <label for="contactEmail" class="col-sm-2 control-label">Contact email</label>
        <div class="col-sm-6">
            <input type="email" class="form-control" id="contactEmail" placeholder="john@smith.com">
        </div>
    </div>
    <div class="form-group">
        <label for="contactNumber" class="col-sm-2 control-label">Contact number</label>
        <div class="col-sm-6">
            <input class="form-control" id="contactNumber" placeholder="07771631876">
        </div>
    </div>
</div>

<div class="col-lg-2" id="refAndDate">
    <div>
        <strong>Ref: <span contenteditable="true" id="refId"></span></strong>
    </div>
    <div>
        <strong>Date: <span contenteditable="true" id="dateId">@DateTime.UtcNow.ToString("dd-MM-yyyy")</span></strong>
    </div>
</div>

<div id="workTables"></div>
<div class="col-md-4 col-md-offset-4" id="addNewCourtButtonDiv">
    <button class="btn btn-success btn-lg" onclick="addQuoteTable();"><i class="glyphicon glyphicon-plus-sign"></i> Add area</button>
</div>

<!-- Modal -->
@{
    Html.RenderPartial("_WorkTypesModal", new PartialWorkViewModel { WorkTypes = Model.WorkTypes, Works = Model.Works });
}
<div class="col-md-8 col-md-offset-2" style="margin-top: 20px;">
    <button class="btn btn-danger" onclick="submitQuote();">Submit quote</button>
</div>

@section scripts{
    <script src="//code.jquery.com/ui/1.11.2/jquery-ui.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.2/themes/smoothness/jquery-ui.css">
    <script>

        var emptyEditableField = "<td contenteditable=true></td>";
        var tableIdGlobal;

        $('#workTypeTabs').find("li").first().addClass("active");
        $('.tab-content').find(".tab-pane").first().addClass("active");

        addQuoteTable();

        $('#customerClub').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetClubsBySearchTerm", "WorkLocation")',
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.parseJSON(data));
                    },
                    error: function (data) {
                        alert(data);
                    }
                });
            },
            select: function (event, ui) {
                $('#customerClub').val(ui.item.text);
                $('#clubAddress').val(ui.item.Address);
                $('#clubId').val(ui.item.id);
                updateReference();

            },
        });

        $('#contactName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetContactsBySearchTerm", "Contact")',
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.parseJSON(data));
                    },
                    error: function (data) {
                        alert(data);
                    }
                });
            },
            select: function (event, ui) {
                $('#contactName').val(ui.item.text);
                $('#contactEmail').val(ui.item.Email);
                $('#contactNumber').val(ui.item.Number);
                $('#contactId').val(ui.item.id);
                updateReference();

            },
        });

        function removeRow(sender) {
            var parent = $(sender).parents('tr');
            parent.remove();
        }

        function removeTable(sender) {
            var parent = $(sender).parents('table');
            parent.remove();
        }

        function addQuoteTable() {
            var $table = $(document.createElement('table'));
            var tableId = "table_" + $('.table-bordered').length;
            $table.attr("id", tableId);
            $table.addClass("table table-bordered");
            $table.append("<thead><tr><th style=width:20%; contenteditable=true>Court</th>" +
                "<th style=width:65%;>Number of courts for these works: <span contenteditable=true>1</span></th>" +
                "<th style=width:10%; contenteditable=true>Price</th>" +
                "<th style=width:5%;><i class=\"glyphicon glyphicon-trash hover\" onclick='removeTable($(this));'></i></th>" +
                "</tr></thead>");
            $table.append("<tbody></tbody>");
            $table.append("<tfoot><tr>" +
                "<td colspan=4 style=text-align:center;>" +
                "<button class=\"btn btn-success btn-sm table-add\" type=button data-toggle=modal data-target=#jobSelector onclick=setTableId(" + tableId + ");>" +
                "<i class=\"glyphicon glyphicon-plus\"></i> Add work" +
                "</button></td></tr></tfoot>");
            $('#workTables').append($table);
        }

        function selectWork(description, price, title) {
            $('#' + tableIdGlobal + ' >tbody').append("<tr>" + emptyEditableField + '<td contenteditable=true>' + $('#' + description).html() + '</td>' + '<td contenteditable=true>' + price + '</td>' +
                "<td><i class=\"glyphicon glyphicon-remove hover\"  onclick=removeRow($(this))></i></td><td style=display:none;>" + title + "</td>" +
                "</tr>");
        }

        function setTableId(tableId) {
            tableIdGlobal = tableId.id;
        }

        function updateReference() {
            var code = getAcronym('customerClub');
            var customer = getAcronym('contactName');
            if (code.length > 0) {
                code += "-";
                if (customer.length > 0) {
                    code += customer + "-Q";
                } else {
                    code += "-Q";
                }
            } else {
                if (customer.length > 0) {
                    code += customer + "-Q";
                } else {
                    code += "-Q";
                }
            }
            code = code.replace("&", "");
            $('#refId').html(code.toUpperCase());

            $.ajax({
                url: '@Url.Action("CheckAvailableQuoteId")',
                async: false,
                dataType: "json",
                data: { currentQuoteId: $('#refId').html() },
                success: function (data) {
                    var availableId = data.id;
                    if (availableId !== 0) {
                        $('#nextAvailableNumber').html(availableId);
                        $('#quoteNumberAlert').removeAttr('hidden');
                    }
                },
                error:function(data) {
                    alert('Something went wrong:' + data);
                }
            });
        }

        function getAcronym(elementId) {
            var elementVal = $('#' + elementId).val();
            var acronym = "";
            elementVal.split(' ').forEach(function (element, index, array) {
                acronym += element.substring(0, 1);
            });
            return acronym;
        }

        function submitQuote() {
            var idInUse = true;
            $.ajax({
                url: '@Url.Action("VerifyQuoteId")',
                async: false,
                dataType: "json",
                data: { quoteId: $('#refId').html() },
                success: function (data) {
                    idInUse = data.Success;
                }
            });
            if (idInUse) {
                alert("The specified quote id already exists. Please select a new one ");
                return;
            }
            $('#workTables').each(function () {
                var json = [];

                $(this).find('table').each(function () {
                    var court;
                    var numberOfCourts;
                    var works = [];

                    $(this).find('tr').each(function () {
                        var header = $(this).find('th');
                        if (header.length == 4) {
                            court = header[0].innerText;
                            numberOfCourts = $(header[1]).find('span')[0].textContent;

                        } else {
                            var cells = $(this).find('td');
                            if (cells.length != 5) {
                                return;
                            }
                            var line = {
                                'WorkArea': cells[0].innerText,
                                'WorkTitle': cells[4].innerText,
                                'Description': cells[1].innerText,
                                'Price': cells[2].innerText

                            };
                            works.push(line);
                        }

                    });
                    json.push({ 'AreaName': court, 'Works': works, 'NumberOfCourts': numberOfCourts });
                });
                var workFromView = {
                    'QuoteRef': $('#refId').html(),
                    'QuoteDate': $('#dateId').html(),
                    'CourtWorkDetails': json,
                    'ContactDetails': {
                        'ClubId': $('#clubId').val(),
                        'ClubName': $('#customerClub').val(),
                        'ClubAddress': $('#clubAddress').val(),
                        'ContactName': $('#contactName').val(),
                        'ContactNumber': $('#contactNumber').val(),
                        'ContactEmail': $('#contactEmail').val(),
                        'ContactId': $('#contactId').val(),
                    }
                };

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("CreateQuote")',
                    dataType: "json",
                    data: { jsonString: JSON.stringify(workFromView) },
                    success: function (data) {
                        alert("Quote created");
                        location.href = '@Url.Action("Index", "Home")';
                    },
                    error: function (data) {
                        alert("Something bad happened!\n Status: "
                            + data.status + ": "
                            + data.statusText + "\nResponse text:\n"
                            + data.responseText);
                    }
                });
            });
        }
    </script>
}
