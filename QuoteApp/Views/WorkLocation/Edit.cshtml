@model QuoteApp.Models.WorkLocation


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>WorkLocation</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.WorkLocationId)
    
            <div class="form-group">
                @Html.LabelFor(model => model.WorkLocationName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.WorkLocationName)
                    @Html.ValidationMessageFor(model => model.WorkLocationName)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Address1, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address1)
                    @Html.ValidationMessageFor(model => model.Address1)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Address2, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address2)
                    @Html.ValidationMessageFor(model => model.Address2)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Address3, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address3)
                    @Html.ValidationMessageFor(model => model.Address3)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Town, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Town)
                    @Html.ValidationMessageFor(model => model.Town)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Country, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Country)
                    @Html.ValidationMessageFor(model => model.Country)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.PostCode, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostCode)
                    @Html.ValidationMessageFor(model => model.PostCode)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber)
                    @Html.ValidationMessageFor(model => model.PhoneNumber)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
